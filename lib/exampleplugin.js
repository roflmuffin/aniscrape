// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, cheerio, needle;

  Promise = require('bluebird');

  needle = Promise.promisifyAll(require('needle'));

  cheerio = require('cheerio');

  module.exports = {
    name: 'animebam',
    initialize: function() {
      return console.log("[" + this.name + "] loaded successfully.");
    },
    search: {
      page: {
        url: 'http://animebam.net/search',
        param: 'search'
      },
      list: '.mse',
      row: {
        name: function(el) {
          return el.find("h2").text();
        },
        url: function(el) {
          return "http://animebam.net" + el.attr('href');
        }
      }
    },
    series: {
      list: '.newmanga li',
      row: {
        name: function(el) {
          return el.find(".anititle").text();
        },
        url: function(el) {
          return "http://animebam.net" + el.find("a").attr("href");
        },
        number: function(el) {
          return el.find('.anm_det_pop').text().match(/(?=[^\s]*$)\d+/)[0];
        }
      }
    },
    episode: function($, body) {
      var url;
      url = "http://animebam.net" + $("iframe.embed-responsive-item").attr('src');
      return needle.getAsync(url).then(function(resp) {
        var episodes, options;
        $ = cheerio.load(resp.body);
        episodes = eval($("script:contains('videoSources')").html().match(/\[.+\]/)[0]);
        options = {
          follow_max: 0,
          headers: {
            'Referer': 'http://animebam.net/'
          }
        };
        return Promise.map(episodes, function(video) {
          return needle.headAsync(video.file, options).then(function(resp) {
            return {
              label: video.label,
              url: resp.headers.location
            };
          });
        });
      });
    }
  };

}).call(this);
